{"version":3,"file":"ngx-papaparse.umd.js.map","sources":["ng://ngx-papaparse/lib/papa.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ParseResult } from './interfaces/parse-result';\nimport { ParseConfig } from './interfaces/parse-config';\nimport { UnparseConfig } from './interfaces/unparse-config';\nimport * as lib from 'papaparse/papaparse.min.js';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class Papa {\n    public _papa = lib;\n\n    /**\n     * Parse CSV to an array\n     */\n    public parse(csv: string|File, config?: ParseConfig): ParseResult {\n        return this._papa.parse(csv, config);\n    }\n\n    /**\n     * Convert an array into CSV\n     */\n    public unparse(data, config?: UnparseConfig): string {\n        return this._papa.unparse(data, config);\n    }\n\n    /**\n     * Set the size in bytes of each file chunk.\n     * Used when streaming files obtained from the DOM that\n     * exist on the local computer. Default 10 MB.\n     */\n    public setLocalChunkSize(value: number): void {\n        this._papa.LocalChunkSize = value;\n    }\n\n    /**\n     * Set the size in bytes of each remote file chunk.\n     * Used when streaming remote files. Default 5 MB.\n     */\n    public setRemoteChunkSize(value: number): void {\n        this._papa.RemoteChunkSize = value;\n    }\n\n    /**\n     * Set the delimiter used when it is left unspecified and cannot be detected automatically. Default is comma.\n     */\n    public setDefaultDelimiter(value: string): void {\n        this._papa.DefaultDelimiter = value;\n    }\n\n    /**\n     * An array of characters that are not allowed as delimiters.\n     */\n    get badDelimiters() {\n        return this._papa.BAD_DELIMITERS;\n    }\n\n    /**\n     * The true delimiter. Invisible. ASCII code 30.\n     * Should be doing the job we strangely rely upon commas and tabs for.\n     */\n    get recordSeparator() {\n        return this._papa.RECORD_SEP;\n    }\n\n    /**\n     * Also sometimes used as a delimiting character. ASCII code 31.\n     */\n    get unitSeparator() {\n        return this._papa.UNIT_SEP;\n    }\n\n    /**\n     * Whether or not the browser supports HTML5 Web Workers.\n     * If false, worker: true will have no effect.\n     */\n    get workersSupported(): boolean {\n        return this._papa.WORKERS_SUPPORTED;\n    }\n}\n"],"names":["Injectable"],"mappings":";;;;;;;;;;AAAA;;yBAUmB,GAAG;;;;;;;;QAKX,oBAAK;;;;;;sBAAC,GAAgB,EAAE,MAAoB;gBAC/C,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;;;;;;;;QAMlC,sBAAO;;;;;;sBAAC,IAAI,EAAE,MAAsB;gBACvC,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;;;;;;;;;QAQrC,gCAAiB;;;;;;;sBAAC,KAAa;gBAClC,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC;;;;;;;;QAO/B,iCAAkB;;;;;;sBAAC,KAAa;gBACnC,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC;;;;;;;QAMhC,kCAAmB;;;;;sBAAC,KAAa;gBACpC,IAAI,CAAC,KAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC;;QAMxC,sBAAI,+BAAa;;;;;;;gBAAjB;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;aACpC;;;WAAA;QAMD,sBAAI,iCAAe;;;;;;;;;gBAAnB;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;aAChC;;;WAAA;QAKD,sBAAI,+BAAa;;;;;;;gBAAjB;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aAC9B;;;WAAA;QAMD,sBAAI,kCAAgB;;;;;;;;;gBAApB;gBACI,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;aACvC;;;WAAA;;oBAxEJA,aAAU,SAAC;wBACR,UAAU,EAAE,MAAM;qBACrB;;;mBARD;;;;;;;;;;;;;;;;;;;;;;;"}
